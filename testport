#!/bin/sh
#
# FreeBSD Port Tools __VERSION__
#
# testport
# Scripts to automate testing a new port or port update before submitting 
# a FreeBSD Problem Report (PR)
#
# Copyright (c) 2003, Sergei Kolobov
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $Id$
#

# Port Tools configuration file
CONFIG="${HOME}/.porttools"

# Commands to output a message with standard prefix
MSG='echo ===> testport: '
ERROR='echo testport: Error '
USAGE="Usage: testport [-h ] [-lLbipdcC]"

# Defaults
RUN_PORTLINT="yes"
CLEAN_BEFORE="yes"
CLEAN_AFTER="yes"

# Parse command line arguments
ARGS=`/usr/bin/getopt hbipdBIPDcClL $*`
if [ $? != 0 ]
then
	echo "Error: invalid arguments"
	echo ${USAGE}
	exit 2
fi

set -- $ARGS
for i 
do
	case "$i" in
	-h)	# help
		echo ${USAGE}
		exit 0
		;;
	-l)	# run portlint(1) only
		STOP="lint"
		;;
	-L)	# do NOT run portlint(1)
		RUN_PORTLINT="no"
		;;
	-b)	# stop after build phase
		STOP="build"
		;;
	-i)	# stop after install phase
		STOP="install"
		;;
	-p) 	# stop after package phase
		STOP="package"
		;;
	-d)	# stop after deinstall phase
		STOP="deinstall"
		;;
	-c)	# Do NOT clean before 
		CLEAN_BEFORE="no"
		;;
	-C)	# Do NOT clean after 
		CLEAN_AFTER="no"
		;;
	--)	# End of option list
		shift
		break;
		;;
	esac
done

# Run portlint(1) to validate port's sanity
if [ "${RUN_PORTLINT}" = "yes" ]
then
	${MSG} "Validating port with portlint"
	PORTLINT_FLAGS="-abct"
	portlint ${PORTLINT_FLAGS}
	if [ $? -ne 0 ]
	then
		${ERROR} "validating port"
		exit 1
	fi
	[ "${STOP}" = "lint" ] && exit 0
fi

# Check to see the config file exists; generate one if not
if [ ! -f ${CONFIG} ]
then
	${MSG} "Generating ${CONFIG} configuration file"
	cat > ${CONFIG} <<- EOF
	# FreeBSD Port Tools configuration file
	# See pr-update(1)
	# vim: ft=sh
	EMAIL="${USER}@`hostname`"
	FULLNAME="`pw usershow -n ${USER} | cut -d: -f8`"
	ORGANIZATION=""
	BUILDROOT="/tmp"
	ARCHIVE_DIR=""
	EOF
fi

# Reading configuration file
${MSG} "Reading configuration from ${CONFIG}"
. ${CONFIG}

# Collect information about the port
PKGNAME="`make -V PKGNAME`"
PREFIX="${BUILDROOT:-/tmp}/${PKGNAME}"

# Create a temporary dir for temporary package database
PKG_DBDIR="`mktemp -d -t pkg_db`" || exit 1

# Display FLAGS
PORT_FLAGS="PREFIX=${PREFIX} PKG_DBDIR=${PKG_DBDIR} $*"
${MSG} "flags: ${PORT_FLAGS}"

# Start with a clean workspace
if [ "${CLEAN_BEFORE}" = "yes" ]
then
	${MSG} "Cleaning workspace before testport"
	make clean
	sudo rm -rf ${PREFIX}
fi

# Go through the build phases
for PHASE in build install package deinstall
do
	SUDO="sudo"
	[ "${PHASE}" = "build" ] && SUDO=""

	${SUDO} make ${PORT_FLAGS} ${PHASE}
	if [ $? -gt 0 ]; then
		${ERROR} "running make ${PHASE}"
		exit 1
	fi

	[ "${PHASE}" = "${STOP}" ] && break
done

# Check for extra files left
${MSG} "Extra files check"
if [ -d ${PREFIX} ]
then
	find ${PREFIX} ! -type d
fi

# Finish with a clean workspace
if [ "${CLEAN_AFTER}" = "yes" ]
then
	${MSG} "Cleaning up after testport"
	make clean
	sudo rm -rf ${PREFIX} ${PKG_DBDIR}
fi

${MSG} "Done."
exit 0
